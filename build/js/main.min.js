"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

$('.results__slider').slick({
  slidesToShow: 3,
  slidesToScroll: 3,
  nextArrow: '<img class="slider-next-arrow-image" src="./build/images/next-arrow.png">',
  prevArrow: '<img class="slider-prev-arrow-image" src="./build/images/prev-arrow.png">',
  responsive: [{
    breakpoint: 1000,
    settings: {
      slidesToShow: 1,
      slidesToScroll: 1
    }
  }, {
    breakpoint: 1200,
    settings: {
      slidesToShow: 2,
      slidesToScroll: 1
    }
  }]
});
var accordeonButtons = document.getElementsByClassName('faq__btn');
var burgerBtn = document.querySelector('.header__menu-btn_mobile');
var menu = document.querySelector('.header__menu_mobile');
var menuLinksMobile = document.querySelectorAll('.header__menu-link_mobile');
burgerBtn.addEventListener('click', function (e) {
  // кнопка-бургер
  e.preventDefault();
  document.body.classList.toggle('body-no-scroll');
  menu.classList.toggle('menu-active');
  this.classList.toggle('menu-btn_active');
});

var _iterator = _createForOfIteratorHelper(menuLinksMobile),
    _step;

try {
  for (_iterator.s(); !(_step = _iterator.n()).done;) {
    var link = _step.value;
    link.addEventListener('click', function () {
      burgerBtn.classList.toggle('menu-btn_active');
      menu.classList.toggle('menu-active');
      document.body.classList.toggle('body-no-scroll');
    });
  }
} catch (err) {
  _iterator.e(err);
} finally {
  _iterator.f();
}

var _iterator2 = _createForOfIteratorHelper(accordeonButtons),
    _step2;

try {
  var _loop = function _loop() {
    var accordeonButton = _step2.value;
    accordeonButton.addEventListener('click', function () {
      this.classList.toggle('faq__btn_active');
      var accordeonPanel = this.nextElementSibling;

      if (accordeonButton.classList.contains('faq__btn_active')) {
        accordeonPanel.style.maxHeight = accordeonPanel.scrollHeight + 'px';
      } else {
        accordeonPanel.style.maxHeight = 0;
      }
    });
  };

  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
    _loop();
  }
} catch (err) {
  _iterator2.e(err);
} finally {
  _iterator2.f();
}

$(document).ready(function () {
  $(".header__menu-link").on('click', function (event) {
    if (this.hash !== "") {
      event.preventDefault();
      var hash = this.hash;
      $('html, body').animate({
        scrollTop: $(hash).offset().top
      }, 1000, function () {
        window.location.hash = hash;
      });
    }
  });
});